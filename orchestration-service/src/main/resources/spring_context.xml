<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:util="http://www.springframework.org/schema/util"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
	   	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
	   	http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

	<context:annotation-config />

	<import resource="jms-api-context.xml"/>

	<bean class="org.ihtsdo.otf.rest.client.SnowOwlRestClient">
		<constructor-arg value="${snowowl.url}"/>
		<constructor-arg value="${snowowl.username}"/>
		<constructor-arg value="${snowowl.password}"/>
		<property name="reasonerId" value="${snowowl.reasonerId}"/>
		<property name="logPath" value="${snowowl.log.path}"/>
		<property name="rolloverLogPath" value="${snowowl.rolloverLog.path}"/>
		<property name="importTimeoutMinutes" value="${snowowl.import.timeout}"/>
		<property name="classificationTimeoutMinutes" value="${snowowl.classification.timeout}"/>
	</bean>
	
	<bean class="org.ihtsdo.orchestration.clients.srs.SRSRestClient">
		<constructor-arg value="${srs.root.url}"/>
		<constructor-arg value="${srs.username}"/>
		<constructor-arg value="${srs.password}"/>
	</bean>
	
	<bean class="org.ihtsdo.orchestration.clients.srs.SRSFileDAO">
		<constructor-arg value="${aws.bucket.refsets}"/>
	</bean>
	
	<bean class="org.ihtsdo.orchestration.clients.rvf.RVFRestClient" >
		<constructor-arg value="${rvf.root.url}"/>
		<constructor-arg value="${rvf.pollPeriod}"/>
		<constructor-arg value="${rvf.timeout}"/>
	</bean>

	<!--<bean class="org.ihtsdo.otf.dao.s3.OfflineS3ClientImpl"/>-->

	<bean class="org.ihtsdo.otf.dao.s3.S3ClientImpl" >
		<constructor-arg>
			<bean class="com.amazonaws.auth.BasicAWSCredentials">
				<constructor-arg value="${aws.key}"/>
				<constructor-arg value="${aws.secretKey}"/>
			</bean>
		</constructor-arg>
	</bean>
	
	<bean class="org.ihtsdo.orchestration.dao.OrchestrationProcessReportDAO">
		<constructor-arg value="${ts.reportsBucket}"/>
	</bean>

	<bean name="snowowlProjectBranch" class="java.lang.String">
		<constructor-arg value="${snowowl.projectBranch}"/>
	</bean>

	<bean name="exportDeltaStartEffectiveTime" class="java.lang.String" >
		<constructor-arg value="${snowowl.export.fromDate}"/>
	</bean>
	
	<bean class="org.ihtsdo.orchestration.clients.rvf.ValidationConfiguration">
		<property name="failureExportMax" value="${ts.rvf.failureExportMax:100}"/>
	</bean>
	
	<bean class="org.ihtsdo.orchestration.clients.srs.SRSProjectConfiguration">
				<property name="readmeEndDate" value="${ts.srs.readmeEndDate}"/>
				<property name="previousPublishedPackageName" value="${ts.srs.previousPublishedPackageName}"/>
				<property name="previousInternationalRelease" value="${ts.rvf.previousInternationalRelease}"/>
				<property name="assertionGroupNames" value="${ts.rvf.assertionGroupNames}"/>
				<property name="failureExportMax" value="${ts.rvf.failureExportMax:100}"/>
				<property name="releaseDate" value="${srs.next.release}"/>
	</bean>
	
	<bean class="org.ihtsdo.orchestration.service.ValidationService" init-method="init"/>
	
	<bean class="org.ihtsdo.orchestration.service.ReleaseService" />


</beans>
